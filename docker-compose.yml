version: '3'

networks:
  dist:

services:
  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    container_name: redis
    expose:
      - 6379
    volumes:
    - redis-data:/data

  api:
    build: ./
    volumes:
      - ./:/var/www/app
    links:
      - redis
    ports:
      - 3000:3000
    environment:
      - REDIS_URL=redis://redis
      - NODE_ENV=development
      - PORT=3000
    depends_on:
      - redis
    command:
      sh -c 'npm i && node server.js'

  elasticsearch:
    environment:
      http.host: 0.0.0.0
      transport.host: 127.0.0.1
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.1
    networks:
      dist: null
    ports:
    - 9200:9200
    expose:
      - 9200
    restart: unless-stopped
    volumes:
    - elasticsearch:/usr/share/elasticsearch/data:rw

  logstash:
    build:
      context: logstash/
    volumes:
     - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
     - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "3456:3456"
    expose:
      - 5000
      - 3456
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - dist
    depends_on:
      - elasticsearch

  kibana:
    depends_on:
    - elasticsearch
    environment:
      http.host: 0.0.0.0
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    image: docker.elastic.co/kibana/kibana-oss:6.2.1
    networks:
      dist: null
    ports:
    - 5601:5601
    restart: unless-stopped

volumes:
 redis-data:
 elasticsearch:
   driver: local
